#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 1.5cm
\rightmargin 1.5cm
\bottommargin 1.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
twocolumn[
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{@twocolumnfalse} 
\end_layout

\end_inset


\end_layout

\begin_layout Title
Audio fingerprinting in WebAssembly per l'esecuzione in browser web
\end_layout

\begin_layout Author
Davide Pisanò, Antonio Servetti
\end_layout

\begin_layout Abstract
Negli ultimi anni si è assistito a una trasformazione nel paradigma di sviluppo
 delle applicazioni desktop, il quale si è mosso con determinazione verso
 un'architettura web-based.
 JavaScript è passato dall’essere un linguaggio per pagine web ad un linguaggio
 
\emph on
general purpose
\emph default
, rendendo necessaria l’introduzione di nuove tecnologie come WebAudio e
 WebAssembly.
 In questo documento si propone di indagare la possibilità di sfruttare
 queste tecnologie web per realizzare un sistema di audio fingerprinting
 che possa operare direttamente nel browser, valutandone l'effettiva fattibilità.
 Verrà inoltre trattata una declinazione innovativa del sistema di riconosciment
o, attraverso la realizzazione di una 
\emph on
second screen application 
\emph default
eseguita nel browser.
 È inoltre stata condotta un'analisi dello stato dell'arte nel campo dell'audio
 fingerprinting, per comprendere le soluzioni già esistenti.
 I risultati ottenuti da questa ricerca promettono di fornire nuove prospettive
 per lo sviluppo di applicazioni audio web-based, aprendo le porte a possibili
 futuri sviluppi e applicazioni nell'ambito del riconoscimento audio in
 tempo reale all'interno del browser.
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{@twocolumnfalse}
\end_layout

\begin_layout Plain Layout

]
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduzione
\end_layout

\begin_layout Standard
Negli ultimi anni si è notato un trend sempre crescente nell'utilizzo di
 JavaScript per la creazione di applicazioni desktop
\begin_inset CommandInset citation
LatexCommand cite
key "rauch2012smashing"
literal "true"

\end_inset

, grazie all'esistenza di tecnologie come Node.js
\begin_inset CommandInset citation
LatexCommand cite
key "rauch2012smashing"
literal "true"

\end_inset

 e Electron
\begin_inset CommandInset citation
LatexCommand cite
key "scott2020javascript"
literal "true"

\end_inset

.
 Il trend di scrivere applicazioni in JavaScript è stato amplificato dalla
 crescente importanza del web come piattaforma per la distribuzione di applicazi
oni software.
 Software utilizzati quotidianamente da miliardi di utenti sono basati sul
 web e, per forza di cose, devono essere scritti in JavaScript.
\end_layout

\begin_layout Standard
Da qui la nascita delle cosiddette 
\emph on
Rich Internet Applications
\begin_inset Foot
status open

\begin_layout Plain Layout
D'ora in avanti RIA
\end_layout

\end_inset


\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "fraternali2010rich"
literal "true"

\end_inset

, ovvero applicazioni web che offrono un'esperienza utente interattiva e
 avanzata simile a quella di un'applicazione desktop tradizionale.
 Le RIA sono caratterizzate da una vasta gamma di funzionalità e interattività
 che le distinguono dalla semplici pagine web statiche.
 Oltre alla classica triade HTML + CSS + JavaScript, le RIA possono fare
 uso di tecnologie più avanzate e recenti come WebSockets, WebAudio, WebAssembly
, WebRTC.
 In sostanza il browser diventa un'interfaccia o un'astrazione della macchina
 sottostante, alla quale si può accedere utilizzando JavaScript.
 Nello specifico WebAudio
\begin_inset CommandInset citation
LatexCommand cite
key "choi2018audioworklet"
literal "true"

\end_inset

 è un'API JavaScript avanzata che consente di manipolare e generare audio
 all'interno del browser.
 È stata progettata per consentire agli sviluppatori di creare RIA che includono
 funzionalità audio, come la registrazione, la riproduzione e l'elaborazione
 di suoni.
 Inoltre, la necessità di scrivere applicazioni real time ha portato la
 necessità di dover eseguire codice ad alta efficienza, obiettivo non realizzabi
le facilmente con un linguaggio interpretato quale JavaScript.
 Per questo motivo nasce 
\emph on
WebAssembly
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout
Più semplicemente Wasm
\end_layout

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "haas2017bringing"
literal "true"

\end_inset

: un formato di codice binario portabile che consente di eseguire codice
 di basso livello all'interno del browser web.
\end_layout

\begin_layout Standard
L'obiettivo di questo documento è quello di discutere la realizzazione di
 un sistema per l'identificazione di audio, da eseguire su dispositivi eterogene
i all'interno di un web browser, sfruttando Wasm e WebAudio.
 Questo presenta numerosi vantaggi, tra i più importanti:
\end_layout

\begin_layout Itemize
l'evitare all'utente il download di un'app addizionale
\end_layout

\begin_layout Itemize
la riduzione del carico lato server: parte della complessità può essere
 spostata sul dispositivo dell'utente finale
\end_layout

\begin_layout Standard
Si guiderà il lettore attraverso la realizzazione del sistema di identificazione
 tra le varie sezioni; trattando la realizzazione di una 
\emph on
second-screen application
\emph default
 per la presentazione, in sincronia con un brano riprodotto, del testo del
 brano stesso.
 Verranno analizzate anche le differenze e il funzionamento di un altro
 algoritmo concorrente open-source, per poi passare, infine, ai possibili
 utilizzi futuri.
\end_layout

\begin_layout Section
The proposed low-latency WebRTC application
\end_layout

\begin_layout Section
Latency Measurements
\end_layout

\begin_layout Section
Robustezza applicazione
\end_layout

\begin_layout Section
Conclusioni
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "biblio"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
